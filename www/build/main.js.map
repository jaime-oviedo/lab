{"version":3,"sources":["../../src/pages/weather/weather.ts","../../src/pages/locations/locations.ts","../../node_modules/@angular/core/@angular lazy","../../src lazy","../../src/app/main.ts","../../src/app/app.module.ts","../../src/app/app.component.ts","../../src/providers/geocode-service/geocode-service.ts","../../src/providers/locations-service/locations-service.ts","../../src/providers/weather-service/weather-service.ts"],"names":[],"mappings":"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","file":"main.js","sourcesContent":["import { Component } from '@angular/core';\nimport { IonicPage, NavController, NavParams, LoadingController, Refresher } from 'ionic-angular';\nimport { WeatherServiceProvider } from '../../providers/weather-service/weather-service';\nimport { Geolocation } from '@ionic-native/geolocation';\nimport { CurrentLoc } from '../../interfaces/current-loc';\n\n/**\n * Generated class for the WeatherPage page.\n *\n * See https://ionicframework.com/docs/components/#navigation for more info on\n * Ionic pages and navigation.\n */\n\n@IonicPage()\n@Component({\n    selector: 'page-weather',\n    templateUrl: 'weather.html',\n})\nexport class WeatherPage {\n    theWeather: any = {};\n    currentData: any = {};\n    daily: any = {};\n    loader: LoadingController;\n    refresher: Refresher;\n    currentLoc: CurrentLoc = { lat: 0, lon: 0 };\n    pageTitle:String ='CurrentLocation';\n\n    constructor(public navCtrl: NavController,\n        public navParams: NavParams,\n        public weatherService: WeatherServiceProvider,\n        public loadingCtrl: LoadingController,\n        public geolocation: Geolocation) {\n        let loader = this.loadingCtrl.create({\n            content: \"Loading weather data ...\",\n        });\n        loader.present();\n        let loc = this.navParams.get('geoloc');\n        \n        if (loc==null) {\n            this.geolocation.getCurrentPosition().then(pos => {\n                console.log('lat: ' + pos.coords.latitude + ', lon: ' + pos.coords.longitude);\n                this.currentLoc.lat = pos.coords.latitude;\n                this.currentLoc.lon = pos.coords.longitude;\n                this.currentLoc.timestamp = pos.timestamp;\n                return this.currentLoc;\n            }).then(currentLoc => {\n                this.weatherService.getWeather(currentLoc).then(theResult => {\n                    this.theWeather = theResult;\n                    this.currentData = this.theWeather.currently;\n                    this.daily = this.theWeather.daily;\n                    loader.dismiss();\n                });\n            });\n        } else {\n            this.currentLoc = loc;\n            this.pageTitle= this.navParams.get('title');\n            weatherService.getWeather(this.currentLoc).then(theResult => {\n                this.theWeather = theResult;\n                this.currentData = this.theWeather.currently;\n                this.daily = this.theWeather.daily;\n                loader.dismiss();\n            });\n        };\n    }\n    ionViewDidLoad() {\n        console.log('ionViewDidLoad WeatherPage');\n    }\n\n    doRefresh(refresher) {\n        this.weatherService.getWeather(this.currentLoc).then(theResult => {\n            this.theWeather = theResult;\n            this.currentData = this.theWeather.currently;\n            this.daily= this.theWeather.daily;\n            refresher.complete();\n        });\n\n    }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/pages/weather/weather.ts","import { Component } from '@angular/core';\nimport { IonicPage, NavController, NavParams, AlertController } from 'ionic-angular';\nimport { CurrentLoc } from '../../interfaces/current-loc';\nimport { WeatherLocation } from '../../interfaces/weather-location';\nimport { LocationsService } from '../../providers/locations-service/locations-service';\nimport { GeocodeServiceProvider } from '../../providers/geocode-service/geocode-service';\nimport { WeatherPage } from '../weather/weather';\n\n/**\n * Generated class for the LocationsPage page.\n *\n * See https://ionicframework.com/docs/components/#navigation for more info on\n * Ionic pages and navigation.\n */\n\n@IonicPage()\n@Component({\n  selector: 'page-locations',\n  templateUrl: 'locations.html',\n})\nexport class LocationsPage {\n\n  locs: Array<WeatherLocation>;\n\n  constructor(public navCtrl: NavController,\n    public navParams: NavParams,\n    public locationsService: LocationsService,\n    public geocodeService: GeocodeServiceProvider,\n    public alertCtrl: AlertController) {\n    locationsService.getLocations().then(res => {\n      this.locs = res;\n    });\n  }\n\n  ionViewDidLoad() {\n    console.log('ionViewDidLoad LocationsPage');\n  }\n\n  deleteLocation(loc) {\n    this.locationsService.removeLocation(loc);\n  }\n\n  addLocation() {\n    let prompt = this.alertCtrl.create({\n      title: 'Add a city',\n      message: \"Enter the city's name\",\n      inputs:[\n        {\n          name: 'title',\n          placeholder: 'City name'\n        }\n      ],\n      buttons:[\n        {\n          text: 'Cancel',\n          handler: data => {\n            console.log('Cancel clicked');\n          }\n        },\n        {\n          text: 'Add',\n          handler: data => {\n            if(data.title!=''){\n              this.geocodeService.getLatLong(data.title).then(res=>{\n                let newLoc={title:'', component: WeatherPage, icon:'pin', loc: {lat:0, lon:0}}\n                newLoc.title=res.name;\n                newLoc.loc.lat=res.location.latitude;\n                newLoc.loc.lon=res.location.longitude;\n\n                this.locationsService.addLocation(newLoc);\n              });\n            }\n          }\n        }\n      ]\n    });\n    prompt.present();\n  }\n\n}\n\n\n\n\n// WEBPACK FOOTER //\n// ./src/pages/locations/locations.ts","function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncatched exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tthrow new Error(\"Cannot find module '\" + req + \"'.\");\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = 111;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/@angular/core/@angular lazy\n// module id = 111\n// module chunks = 2","var map = {\n\t\"../pages/locations/locations.module\": [\n\t\t268,\n\t\t1\n\t],\n\t\"../pages/weather/weather.module\": [\n\t\t267,\n\t\t0\n\t]\n};\nfunction webpackAsyncContext(req) {\n\tvar ids = map[req];\n\tif(!ids)\n\t\treturn Promise.reject(new Error(\"Cannot find module '\" + req + \"'.\"));\n\treturn __webpack_require__.e(ids[1]).then(function() {\n\t\treturn __webpack_require__(ids[0]);\n\t});\n};\nwebpackAsyncContext.keys = function webpackAsyncContextKeys() {\n\treturn Object.keys(map);\n};\nwebpackAsyncContext.id = 153;\nmodule.exports = webpackAsyncContext;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src lazy\n// module id = 153\n// module chunks = 2","import { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app.module';\n\nplatformBrowserDynamic().bootstrapModule(AppModule);\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/main.ts","import { NgModule, ErrorHandler } from '@angular/core';\nimport { BrowserModule } from '@angular/platform-browser';\nimport { HttpModule } from '@angular/http';\nimport { IonicApp, IonicModule, IonicErrorHandler } from 'ionic-angular';\nimport { MyApp } from './app.component';\nimport { WeatherPage } from '../pages/weather/weather';\nimport { LocationsPage } from '../pages/locations/locations';\nimport { StatusBar } from '@ionic-native/status-bar';\nimport { SplashScreen } from '@ionic-native/splash-screen';\nimport { WeatherServiceProvider } from '../providers/weather-service/weather-service';\nimport { GeocodeServiceProvider } from '../providers/geocode-service/geocode-service';\nimport { LocationsService } from '../providers/locations-service/locations-service';\nimport { Geolocation } from '@ionic-native/geolocation';\n\n@NgModule({\n  declarations: [\n    MyApp,\n    WeatherPage,\n    LocationsPage\n  ],\n  imports: [\n    BrowserModule,\n    HttpModule,\n    IonicModule.forRoot(MyApp)\n  ],\n  bootstrap: [IonicApp],\n  entryComponents: [\n    MyApp,\n    WeatherPage,\n    LocationsPage\n  ],\n  providers: [\n    StatusBar,\n    SplashScreen,\n    { provide: ErrorHandler, useClass: IonicErrorHandler },\n    WeatherServiceProvider,\n    GeocodeServiceProvider,\n    LocationsService,\n    Geolocation]\n})\nexport class AppModule { }\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/app.module.ts","import { Component, ViewChild } from '@angular/core';\nimport { Nav, Platform } from 'ionic-angular';\nimport { StatusBar } from '@ionic-native/status-bar';\nimport { SplashScreen } from '@ionic-native/splash-screen';\n\nimport { WeatherPage } from '../pages/weather/weather';\nimport { LocationsPage } from '../pages/locations/locations';\n\nimport { WeatherServiceProvider } from '../providers/weather-service/weather-service';\nimport { CurrentLoc } from '../interfaces/current-loc'\n\n@Component({\n    templateUrl: 'app.html'\n})\nexport class MyApp {\n    @ViewChild(Nav) nav: Nav;\n\n    rootPage: any = WeatherPage;\n\n    pages: Array<{ title: string, component: any, icon: string, loc?: CurrentLoc }>;\n\n    constructor(public platform: Platform, public statusBar: StatusBar,\n        public splashScreen: SplashScreen,\n        public weatherService: WeatherServiceProvider) {\n\n        this.initializeApp();\n\n        // used for an example of ngFor and navigation\n        this.pages = [\n            { title: 'Edit Locations', component: LocationsPage, icon: 'create' },\n            { title: 'Current Location', component: WeatherPage, icon: 'pin' },\n            {\n                title: 'San Francisco, CA', component: WeatherPage, icon: 'pin',\n                loc: { lat: 37.7749, lon: -80.6077 }\n            },\n            {\n                title: 'Concepción, CL', component: WeatherPage, icon: 'pin',\n                loc: { lat: -36.4622, lon: -73.0347 }\n            }\n        ];\n\n    }\n\n    initializeApp() {\n        this.platform.ready().then(() => {\n            // Okay, so the platform is ready and our pl  ugins are available.\n            // Here you can do any higher level native things you might need.\n            this.statusBar.styleDefault();\n            this.splashScreen.hide();\n        });\n    }\n\n    openPage(page) {\n        // Reset the content nav to have just this page\n        // we wouldn't want the back button to show in this scenario\n        if (page.hasOwnProperty('loc')) {\n            this.nav.setRoot(page.component, { geoloc: page.loc, title: page.title });\n        } else {\n            this.nav.setRoot(page.component);\n        }\n    }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/app.component.ts","import { Injectable } from '@angular/core';\nimport { Http } from '@angular/http';\nimport 'rxjs/add/operator/map';\n\n/*\n  Generated class for the GeocodeServiceProvider provider.\n\n  See https://angular.io/guide/dependency-injection for more info on providers\n  and Angular DI.\n*/\n@Injectable()\nexport class GeocodeServiceProvider {\n\n  data: any;\n  apikey: String = 'AIzaSyA70ruE2ck7hPMyohXdj0ScmPbSJciO9IQ';\n\n  constructor(public http: Http) {\n    this.data = null;\n  }\n\n  getLatLong(address: string) {\n    if (this.data) {\n      return Promise.resolve(this.data);\n    }\n\n    return new Promise(resolve => {\n      this.http.get('https://maps.googleapis.com/maps/apis/geocode/json?address='\n        + encodeURIComponent(address) + '&key=' + this.apikey)\n        .map(res => res.json())\n        .subscribe(data => {\n          if (data.status === \"OK\") {\n            resolve({\n              name: data.results[0].formatted_address, location: {\n                latitude: data.results[0].geometry.location.lat,\n                longitude: data.results[0].geometry.location.lng\n              }\n            });\n          } else {\n            console.log(data);\n          }\n        });\n    });\n  }\n}\n\n\n\n\n// WEBPACK FOOTER //\n// ./src/providers/geocode-service/geocode-service.ts","import { Injectable } from '@angular/core';\r\nimport { WeatherLocation } from '../../interfaces/weather-location';\r\nimport { WeatherPage } from '../../pages/weather/weather';\r\n\r\n@Injectable()\r\nexport class LocationsService {\r\n    locations: Array<WeatherLocation>;\r\n\r\n    constructor() {\r\n        this.locations = [\r\n            {\r\n                title: 'San Francisco, CA', component: WeatherPage, icon: 'pin',\r\n                loc: { lat: 37.7749, lon: -80.6077 }\r\n            },\r\n            {\r\n                title: 'Concepción, CL', component: WeatherPage, icon: 'pin',\r\n                loc: { lat: -36.4622, lon: -73.0347 }\r\n            }\r\n        ];\r\n\r\n    }\r\n\r\n    getLocations(){\r\n        return Promise.resolve(this.locations);\r\n    }\r\n\r\n    removeLocation(loc:WeatherLocation){\r\n        let index= this.locations.indexOf(loc);\r\n        if(index!=-1){\r\n            this.locations.splice(index,1);\r\n        }\r\n    }\r\n\r\n    addLocation(loc: WeatherLocation){\r\n        this.locations.push(loc);\r\n    }\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// ./src/providers/locations-service/locations-service.ts","import { Injectable } from '@angular/core';\nimport { Http } from '@angular/http';\nimport 'rxjs/add/operator/map';\nimport { CurrentLoc } from '../../interfaces/current-loc';\n\n/*\n  Generated class for the WeatherServiceProvider provider.\n\n  See https://angular.io/guide/dependency-injection for more info on providers\n  and Angular DI.\n*/\n@Injectable()\nexport class WeatherServiceProvider {\n    data: any = null;\n    constructor(public http: Http) {\n        console.log('Hello WeatherServiceProvider Provider');\n    }\n\n    load(currentLoc: CurrentLoc) {\n        if (this.data) {\n            return Promise.resolve(this.data);\n        }\n\n        return new Promise(resolve => {\r\n            this.http.get('/api/forecast/' + currentLoc.lat + ',' + currentLoc.lon)\n                .map(res => res.json())\n                .subscribe(data => {\n                    this.data = data;\n                    resolve(this.data);\n                });\n\n        });\n    }\n\n    getWeather(currentLoc: CurrentLoc) {\n        this.data = null;\n        return this.load(currentLoc).then(data => {\n            return data;\n        });\n    }\n}\n\n\n// WEBPACK FOOTER //\n// ./src/providers/weather-service/weather-service.ts"],"sourceRoot":""}